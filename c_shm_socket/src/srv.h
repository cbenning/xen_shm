/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef srv_H
#define srv_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(ORBIT_DECL_srv) && !defined(_srv_defined)
#define ORBIT_DECL_srv 1
#define _srv_defined 1
#define srv__freekids CORBA_Object__freekids
typedef CORBA_Object srv;
extern CORBA_unsigned_long srv__classid;
#if !defined(TC_IMPL_TC_srv_0)
#define TC_IMPL_TC_srv_0 's'
#define TC_IMPL_TC_srv_1 'r'
#define TC_IMPL_TC_srv_2 'v'
#ifdef ORBIT_IDL_C_IMODULE_srv
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_srv_struct;
#define TC_srv ((CORBA_TypeCode)&TC_srv_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_srv
#define _defined_POA_srv 1
typedef struct {
  void *_private;
CORBA_double (*add)(PortableServer_Servant _servant, const CORBA_double i, const CORBA_double j, CORBA_Environment *ev);
} POA_srv__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_srv__epv *srv_epv;
} POA_srv__vepv;
typedef struct {
  void *_private;
  POA_srv__vepv *vepv;
} POA_srv;
extern void POA_srv__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_srv__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_srv */

/** skel prototypes **/
void _ORBIT_skel_small_srv_add(POA_srv *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_double (*_impl_add)(PortableServer_Servant _servant, const CORBA_double i, const CORBA_double j, CORBA_Environment *ev));

/** stub prototypes **/
CORBA_double srv_add(srv _obj, const CORBA_double i, const CORBA_double j, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_srv
static 
#else
extern 
#endif
ORBit_IInterface srv__iinterface;
#define srv_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_srv
static 
#else
extern 
#endif
ORBit_IMethod srv__imethods[srv_IMETHODS_LEN];

/** IMethods index */

#ifndef __srv__imethods_index
#define __srv__imethods_index
typedef enum {
	srv_add__imethods_index
} srv__imethods_index;
#endif /* __srv__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
